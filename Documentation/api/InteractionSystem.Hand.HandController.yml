### YamlMime:ManagedReference
items:
- uid: InteractionSystem.Hand.HandController
  commentId: T:InteractionSystem.Hand.HandController
  id: HandController
  parent: InteractionSystem.Hand
  children:
  - InteractionSystem.Hand.HandController.Awake
  - InteractionSystem.Hand.HandController.hand
  - InteractionSystem.Hand.HandController.placeholderSensor
  langs:
  - csharp
  - vb
  name: HandController
  nameWithType: HandController
  fullName: InteractionSystem.Hand.HandController
  type: Class
  source:
    id: HandController
    path: ''
    startLine: 24218
  assemblies:
  - cs.temp.dll
  namespace: InteractionSystem.Hand
  syntax:
    content: 'public class HandController : Singleton<HandController>'
    content.vb: >-
      Public Class HandController
          Inherits Singleton(Of HandController)
  inheritance:
  - System.Object
  - Global.Singleton{InteractionSystem.Hand.HandController}
  inheritedMembers:
  - Global.Singleton{InteractionSystem.Hand.HandController}.Instance
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: InteractionSystem.Hand.HandController.hand
  commentId: F:InteractionSystem.Hand.HandController.hand
  id: hand
  parent: InteractionSystem.Hand.HandController
  langs:
  - csharp
  - vb
  name: hand
  nameWithType: HandController.hand
  fullName: InteractionSystem.Hand.HandController.hand
  type: Field
  source:
    id: hand
    path: ''
    startLine: 24220
  assemblies:
  - cs.temp.dll
  namespace: InteractionSystem.Hand
  syntax:
    content: public Hand hand
    return:
      type: InteractionSystem.Hand.Hand
    content.vb: Public hand As Hand
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InteractionSystem.Hand.HandController.placeholderSensor
  commentId: F:InteractionSystem.Hand.HandController.placeholderSensor
  id: placeholderSensor
  parent: InteractionSystem.Hand.HandController
  langs:
  - csharp
  - vb
  name: placeholderSensor
  nameWithType: HandController.placeholderSensor
  fullName: InteractionSystem.Hand.HandController.placeholderSensor
  type: Field
  source:
    id: placeholderSensor
    path: ''
    startLine: 24221
  assemblies:
  - cs.temp.dll
  namespace: InteractionSystem.Hand
  syntax:
    content: public PlaceholderSensor placeholderSensor
    return:
      type: InteractionSystem.Hand.PlaceholderSensor
    content.vb: Public placeholderSensor As PlaceholderSensor
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: InteractionSystem.Hand.HandController.Awake
  commentId: M:InteractionSystem.Hand.HandController.Awake
  id: Awake
  parent: InteractionSystem.Hand.HandController
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: HandController.Awake()
  fullName: InteractionSystem.Hand.HandController.Awake()
  type: Method
  source:
    id: Awake
    path: ''
    startLine: 24223
  assemblies:
  - cs.temp.dll
  namespace: InteractionSystem.Hand
  syntax:
    content: protected void Awake()
    content.vb: Protected Sub Awake
  overload: InteractionSystem.Hand.HandController.Awake*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: InteractionSystem.Hand
  commentId: N:InteractionSystem.Hand
  name: InteractionSystem.Hand
  nameWithType: InteractionSystem.Hand
  fullName: InteractionSystem.Hand
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Singleton{InteractionSystem.Hand.HandController}
  commentId: T:Global.Singleton{InteractionSystem.Hand.HandController}
  definition: Global.Singleton`1
  name: Singleton<HandController>
  nameWithType: Singleton<HandController>
  fullName: Singleton<InteractionSystem.Hand.HandController>
  nameWithType.vb: Singleton(Of HandController)
  fullName.vb: Singleton(Of InteractionSystem.Hand.HandController)
  name.vb: Singleton(Of HandController)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - uid: InteractionSystem.Hand.HandController
    name: HandController
    nameWithType: HandController
    fullName: InteractionSystem.Hand.HandController
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: InteractionSystem.Hand.HandController
    name: HandController
    nameWithType: HandController
    fullName: InteractionSystem.Hand.HandController
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{InteractionSystem.Hand.HandController}.Instance
  commentId: P:Global.Singleton{InteractionSystem.Hand.HandController}.Instance
  parent: Global.Singleton{InteractionSystem.Hand.HandController}
  definition: Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<HandController>.Instance
  fullName: Singleton<InteractionSystem.Hand.HandController>.Instance
  nameWithType.vb: Singleton(Of HandController).Instance
  fullName.vb: Singleton(Of InteractionSystem.Hand.HandController).Instance
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: InteractionSystem.Hand.Hand
  commentId: T:InteractionSystem.Hand.Hand
  parent: InteractionSystem.Hand
  name: Hand
  nameWithType: Hand
  fullName: InteractionSystem.Hand.Hand
- uid: InteractionSystem.Hand.PlaceholderSensor
  commentId: T:InteractionSystem.Hand.PlaceholderSensor
  parent: InteractionSystem.Hand
  name: PlaceholderSensor
  nameWithType: PlaceholderSensor
  fullName: InteractionSystem.Hand.PlaceholderSensor
- uid: InteractionSystem.Hand.HandController.Awake*
  commentId: Overload:InteractionSystem.Hand.HandController.Awake
  name: Awake
  nameWithType: HandController.Awake
  fullName: InteractionSystem.Hand.HandController.Awake
